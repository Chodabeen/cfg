digraph "CFG for '_ZNSt5dequeIcSaIcEE9push_backERKc' function" {
	label="CFG for '_ZNSt5dequeIcSaIcEE9push_backERKc' function";

	Node0x6ba5c60 [shape=record,label="{entry:\l  %this.addr = alloca %\"class.std::deque\"*, align 8\l  %__x.addr = alloca i8*, align 8\l  store %\"class.std::deque\"* %this, %\"class.std::deque\"** %this.addr, align 8\l  store i8* %__x, i8** %__x.addr, align 8\l  %this1 = load %\"class.std::deque\"*, %\"class.std::deque\"** %this.addr, align 8\l  %0 = bitcast %\"class.std::deque\"* %this1 to %\"class.std::_Deque_base\"*\l  %_M_impl = getelementptr inbounds %\"class.std::_Deque_base\",\l... %\"class.std::_Deque_base\"* %0, i32 0, i32 0\l  %_M_finish = getelementptr inbounds %\"struct.std::_Deque_base\<char,\l... std::allocator\<char\> \>::_Deque_impl\", %\"struct.std::_Deque_base\<char,\l... std::allocator\<char\> \>::_Deque_impl\"* %_M_impl, i32 0, i32 3\l  %_M_cur = getelementptr inbounds %\"struct.std::_Deque_iterator\",\l... %\"struct.std::_Deque_iterator\"* %_M_finish, i32 0, i32 0\l  %1 = load i8*, i8** %_M_cur, align 8\l  %2 = bitcast %\"class.std::deque\"* %this1 to %\"class.std::_Deque_base\"*\l  %_M_impl2 = getelementptr inbounds %\"class.std::_Deque_base\",\l... %\"class.std::_Deque_base\"* %2, i32 0, i32 0\l  %_M_finish3 = getelementptr inbounds %\"struct.std::_Deque_base\<char,\l... std::allocator\<char\> \>::_Deque_impl\", %\"struct.std::_Deque_base\<char,\l... std::allocator\<char\> \>::_Deque_impl\"* %_M_impl2, i32 0, i32 3\l  %_M_last = getelementptr inbounds %\"struct.std::_Deque_iterator\",\l... %\"struct.std::_Deque_iterator\"* %_M_finish3, i32 0, i32 2\l  %3 = load i8*, i8** %_M_last, align 8\l  %add.ptr = getelementptr inbounds i8, i8* %3, i64 -1\l  %cmp = icmp ne i8* %1, %add.ptr\l  br i1 %cmp, label %if.then, label %if.else\l|{<s0>T|<s1>F}}"];
	Node0x6ba5c60:s0 -> Node0x6ba5bd0;
	Node0x6ba5c60:s1 -> Node0x6ba67a0;
	Node0x6ba5bd0 [shape=record,label="{if.then:                                          \l  %4 = bitcast %\"class.std::deque\"* %this1 to %\"class.std::_Deque_base\"*\l  %_M_impl4 = getelementptr inbounds %\"class.std::_Deque_base\",\l... %\"class.std::_Deque_base\"* %4, i32 0, i32 0\l  %5 = bitcast %\"struct.std::_Deque_base\<char, std::allocator\<char\>\l... \>::_Deque_impl\"* %_M_impl4 to %\"class.std::allocator\"*\l  %6 = bitcast %\"class.std::deque\"* %this1 to %\"class.std::_Deque_base\"*\l  %_M_impl5 = getelementptr inbounds %\"class.std::_Deque_base\",\l... %\"class.std::_Deque_base\"* %6, i32 0, i32 0\l  %_M_finish6 = getelementptr inbounds %\"struct.std::_Deque_base\<char,\l... std::allocator\<char\> \>::_Deque_impl\", %\"struct.std::_Deque_base\<char,\l... std::allocator\<char\> \>::_Deque_impl\"* %_M_impl5, i32 0, i32 3\l  %_M_cur7 = getelementptr inbounds %\"struct.std::_Deque_iterator\",\l... %\"struct.std::_Deque_iterator\"* %_M_finish6, i32 0, i32 0\l  %7 = load i8*, i8** %_M_cur7, align 8\l  %8 = load i8*, i8** %__x.addr, align 8\l  call void\l... @_ZN9__gnu_cxx14__alloc_traitsISaIcEE9constructIcEEvRS1_PcRKT_(%\"class.std::al\l...locator\"* dereferenceable(1) %5, i8* %7, i8* dereferenceable(1) %8)\l  %9 = bitcast %\"class.std::deque\"* %this1 to %\"class.std::_Deque_base\"*\l  %_M_impl8 = getelementptr inbounds %\"class.std::_Deque_base\",\l... %\"class.std::_Deque_base\"* %9, i32 0, i32 0\l  %_M_finish9 = getelementptr inbounds %\"struct.std::_Deque_base\<char,\l... std::allocator\<char\> \>::_Deque_impl\", %\"struct.std::_Deque_base\<char,\l... std::allocator\<char\> \>::_Deque_impl\"* %_M_impl8, i32 0, i32 3\l  %_M_cur10 = getelementptr inbounds %\"struct.std::_Deque_iterator\",\l... %\"struct.std::_Deque_iterator\"* %_M_finish9, i32 0, i32 0\l  %10 = load i8*, i8** %_M_cur10, align 8\l  %incdec.ptr = getelementptr inbounds i8, i8* %10, i32 1\l  store i8* %incdec.ptr, i8** %_M_cur10, align 8\l  br label %if.end\l}"];
	Node0x6ba5bd0 -> Node0x6ba6900;
	Node0x6ba67a0 [shape=record,label="{if.else:                                          \l  %11 = load i8*, i8** %__x.addr, align 8\l  call void @_ZNSt5dequeIcSaIcEE16_M_push_back_auxERKc(%\"class.std::deque\"*\l... %this1, i8* dereferenceable(1) %11)\l  br label %if.end\l}"];
	Node0x6ba67a0 -> Node0x6ba6900;
	Node0x6ba6900 [shape=record,label="{if.end:                                           \l  ret void\l}"];
}
